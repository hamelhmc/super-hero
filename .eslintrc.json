{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": [
    "prettier"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@typescript-eslint/strict",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:rxjs/recommended"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/contextual-lifecycle": "error",
        "@angular-eslint/no-conflicting-lifecycle": "error",
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-output-native": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "no-param-reassign": "off",
        "no-case-declarations": "error",
        "no-console": [
          "error",
          {
            "allow": [
              "info",
              "assert",
              "warn",
              "error"
            ]
          }
        ],
        "no-implicit-coercion": [
          "error",
          {
            "allow": [
              "!!"
            ]
          }
        ],
        "no-return-assign": [
          "error",
          "always"
        ],
        "no-useless-rename": [
          "error",
          {
            "ignoreDestructuring": true,
            "ignoreImport": false,
            "ignoreExport": false
          }
        ],
        "eqeqeq": [
          "error",
          "always"
        ],
        "no-useless-concat": "error",
        "prefer-template": "error",
        "curly": [
          "error",
          "all"
        ],
        "no-useless-constructor": "off",
        "prefer-destructuring": "off",
        "no-unused-vars": "off",
        "arrow-body-style": "error",
        "brace-style": [
          "error",
          "1tbs"
        ],
        "constructor-super": "error",
        "dot-notation": "off",
        "eol-last": "error",
        "guard-for-in": "error",
        "id-denylist": "off",
        "id-match": "off",
        "max-len": [
          "error",
          {
            "code": 140
          }
        ],
        "no-bitwise": "error",
        "no-caller": "error",
        "no-debugger": "error",
        "no-empty": "off",
        "no-empty-function": "off",
        "no-eval": "error",
        "no-fallthrough": "error",
        "no-new-wrappers": "error",
        "no-restricted-imports": [
          "error",
          "rxjs/Rx"
        ],
        "no-shadow": "off",
        "no-throw-literal": "error",
        "no-trailing-spaces": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": "off",
        "no-unused-expressions": "off",
        "no-unused-labels": "error",
        "no-use-before-define": "off",
        "no-var": "error",
        "prefer-const": "error",
        "quotes": "off",
        "radix": "error",
        "semi": "off",
        "spaced-comment": [
          "error",
          "always",
          {
            "markers": [
              "/"
            ]
          }
        ],
        "no-array-constructor": "error",
        "no-extend-native": "error",
        "no-lonely-if": "error",
        "object-shorthand": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "yoda": "error",
        "no-await-in-loop": "error",
        "no-constructor-return": "error",
        "no-promise-executor-return": "error",
        "no-self-compare": "error",
        "no-template-curly-in-string": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable-loop": "error",
        "max-classes-per-file": "off",
        "no-cond-assign": "error",
        "no-invalid-this": "off",
        "no-unsafe-finally": "error",
        "one-var": [
          "error",
          "never"
        ],
        "use-isnan": "error",
        "valid-typeof": "off",
        "arrow-parens": "off",
        "comma-dangle": "off",
        "new-parens": "error",
        "no-multiple-empty-lines": "off",
        "sort-keys": "off",
        "quote-props": [
          "error",
          "as-needed"
        ],
        "padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": "*",
            "next": "return"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/member-ordering": "error",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "format": [
              "camelCase",
              "UPPER_CASE"
            ],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          }
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "hoist": "all"
          }
        ],
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/quotes": [
          "error",
          "single"
        ],
        "@typescript-eslint/semi": [
          "error",
          "always"
        ],
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/unified-signatures": "error",
        "@typescript-eslint/no-extra-non-null-assertion": [
          "error"
        ],
        "@typescript-eslint/no-confusing-non-null-assertion": [
          "error"
        ],
        "@typescript-eslint/no-explicit-any": [
          "warn"
        ],
        "@typescript-eslint/no-non-null-asserted-optional-chain": [
          "error"
        ],
        "@typescript-eslint/no-require-imports": [
          "error"
        ],
        "@typescript-eslint/no-unnecessary-condition": [
          "error"
        ],
        "@typescript-eslint/prefer-for-of": [
          "error"
        ],
        "@typescript-eslint/prefer-nullish-coalescing": [
          "error"
        ],
        "@typescript-eslint/switch-exhaustiveness-check": [
          "error"
        ],
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "Object": {
                "message": "Avoid using the `Object` type. Did you mean `object`?"
              },
              "Function": {
                "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
              },
              "Boolean": {
                "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
              },
              "Number": {
                "message": "Avoid using the `Number` type. Did you mean `number`?"
              },
              "String": {
                "message": "Avoid using the `String` type. Did you mean `string`?"
              },
              "Symbol": {
                "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
              }
            }
          }
        ],
        "@typescript-eslint/triple-slash-reference": [
          "error",
          {
            "path": "always",
            "types": "prefer-import",
            "lib": "always"
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array-simple",
            "readonly": "array-simple"
          }
        ],
        "@typescript-eslint/no-duplicate-imports": "error",
        "@typescript-eslint/no-extraneous-class": "off",
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true,
            "allowTypedFunctionExpressions": true,
            "allowHigherOrderFunctions": true,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowConciseArrowFunctionExpressionsStartingWithVoid": true
          }
        ],
        "@typescript-eslint/no-useless-constructor": [
          "error"
        ],
        "@typescript-eslint/no-inferrable-types": [
          "error",
          {
            "ignoreParameters": true
          }
        ],
        "@typescript-eslint/prefer-readonly": [
          "error"
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "no-public"
          }
        ],
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/typescript-estree": "off",
        "rxjs/finnish": "error",
        "rxjs/no-compat": "error",
        "rxjs/no-connectable": "error",
        "rxjs/no-cyclic-action": "error",
        "rxjs/no-ignored-observable": "error",
        "rxjs/no-topromise": "error",
        "rxjs/no-unsafe-catch": "error",
        "rxjs/no-unsafe-first": "error",
        "rxjs/no-unsafe-switchmap": "error",
        "rxjs/throw-error": "error"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/all",
        "plugin:@angular-eslint/template/accessibility"
      ],
      "rules": {
        "@angular-eslint/template/i18n": "off",
        "@angular-eslint/template/attributes-order": "off"
      }
    }
  ]
}